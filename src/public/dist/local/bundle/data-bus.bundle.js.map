{"version":3,"sources":["webpack://codecrumbs/./js/core/dataBus/index.js"],"names":["DataBusContainer","standalone","props","setupStandalone","setupLocal","setPredefinedState","predefinedState","createConnection","type","data","onSocketEvent","dataBody","setInitialSourceData","setChangedSourceData","SOCKET_EVENT_TYPE","INIT_SOURCE_FILES_SYNC","handleInitSyncEvent","UPDATE_SOURCE_FILE_SYNC","handleUpdateSyncEvent","React","Component","mapDispatchToProps","connect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;;IAEMA,gB;;;;;;;;;;;;;wCACgB;AAAA,UACVC,UADU,GACK,KAAKC,KADV,CACVD,UADU;;AAGlB,UAAIA,UAAJ,EAAgB;AACd,eAAO,KAAKE,eAAL,EAAP;AACD;;AAED,aAAO,KAAKC,UAAL,EAAP;AACD;;;sCAEiB;AAAA,wBACgC,KAAKF,KADrC;AAAA,UACRG,kBADQ,eACRA,kBADQ;AAAA,UACYC,eADZ,eACYA,eADZ;AAEhBD,wBAAkB,CAACC,eAAD,CAAlB;AACD;;;iCAEY;AAAA;;AACXC,sFAAgB,CAAC;AAAA,YAAGC,IAAH,QAAGA,IAAH;AAAA,YAASC,IAAT,QAASA,IAAT;AAAA,eAAoB,KAAI,CAACC,aAAL,CAAmBF,IAAnB,EAAyBC,IAAzB,CAApB;AAAA,OAAD,CAAhB;AACD;;;wCAEmBE,Q,EAAU;AAAA,UACpBC,oBADoB,GACK,KAAKV,KADV,CACpBU,oBADoB;AAE5BA,0BAAoB,CAACD,QAAD,CAApB;AACD;;;0CAEqBA,Q,EAAU;AAAA,UACtBE,oBADsB,GACG,KAAKX,KADR,CACtBW,oBADsB;AAE9BA,0BAAoB,CAACF,QAAD,CAApB;AACD;;;kCAEaH,I,EAAMC,I,EAAM;AACxB,cAAQD,IAAR;AACE,aAAKM,gEAAiB,CAACC,sBAAvB;AACE,iBAAO,KAAKC,mBAAL,CAAyBP,IAAzB,CAAP;;AAEF,aAAKK,gEAAiB,CAACG,uBAAvB;AACE,iBAAO,KAAKC,qBAAL,CAA2BT,IAA3B,CAAP;;AAEF;AACE;AARJ;AAUD;;;6BAEQ;AACP,aAAO;AAAK,iBAAS,EAAC;AAAf,QAAP;AACD;;;;EA7C4BU,4CAAK,CAACC,S;;AAgDrC,IAAMC,kBAAkB,GAAG;AACzBT,sBAAoB,EAApBA,6DADyB;AAEzBC,sBAAoB,EAApBA,6DAFyB;AAGzBR,oBAAkB,EAAlBA,2DAAkBA;AAHO,CAA3B;AAMeiB,0HAAO,CACpB,IADoB,EAEpBD,kBAFoB,CAAP,CAGbrB,gBAHa,CAAf,E","file":"data-bus.bundle.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { createConnection } from 'core/dataBus/connection';\nimport { SOCKET_EVENT_TYPE } from 'core/constants';\nimport { setInitialSourceData, setChangedSourceData, setPredefinedState } from './actions';\n\nclass DataBusContainer extends React.Component {\n  componentDidMount() {\n    const { standalone } = this.props;\n\n    if (standalone) {\n      return this.setupStandalone();\n    }\n\n    return this.setupLocal();\n  }\n\n  setupStandalone() {\n    const { setPredefinedState, predefinedState } = this.props;\n    setPredefinedState(predefinedState);\n  }\n\n  setupLocal() {\n    createConnection(({ type, data }) => this.onSocketEvent(type, data));\n  }\n\n  handleInitSyncEvent(dataBody) {\n    const { setInitialSourceData } = this.props;\n    setInitialSourceData(dataBody);\n  }\n\n  handleUpdateSyncEvent(dataBody) {\n    const { setChangedSourceData } = this.props;\n    setChangedSourceData(dataBody);\n  }\n\n  onSocketEvent(type, data) {\n    switch (type) {\n      case SOCKET_EVENT_TYPE.INIT_SOURCE_FILES_SYNC:\n        return this.handleInitSyncEvent(data);\n\n      case SOCKET_EVENT_TYPE.UPDATE_SOURCE_FILE_SYNC:\n        return this.handleUpdateSyncEvent(data);\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return <div className=\"DataBus-container\" />;\n  }\n}\n\nconst mapDispatchToProps = {\n  setInitialSourceData,\n  setChangedSourceData,\n  setPredefinedState\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(DataBusContainer);\n"],"sourceRoot":""}