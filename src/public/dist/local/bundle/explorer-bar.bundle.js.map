{"version":3,"sources":["webpack://codecrumbs/./js/components/explorerBar/component/ExplorerBar.scss","webpack://codecrumbs/./js/components/explorerBar/ExplorerBarContainer.js","webpack://codecrumbs/./js/components/explorerBar/component/ExplorerBar.js","webpack://codecrumbs/./js/components/explorerBar/component/ExplorerBar.scss?17ca"],"names":["ExplorerBarContainer","explorerBar","otherProps","mapStateToProps","state","props","getSource","filesMap","foldersMap","getSourceLayout","sourceLayoutTree","getCheckedState","nodesTree","mapDispatchToProps","dispatch","onFolderClick","node","onFileClick","selectNode","connect","DirectoryTree","TreeNode","buildNodes","tree","filter","n","map","data","type","FILE_NODE_TYPE","name","path","children","length","rootPath"],"mappings":"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","file":"explorer-bar.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ExplorerBar {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  width: 250px;\\n  z-index: 6;\\n  background-color: white;\\n  border-right: 1px solid #ebedf0; }\\n  .ExplorerBar .body {\\n    height: 100%;\\n    position: relative; }\\n    .ExplorerBar .body .ant-tree {\\n      width: 100%; }\\n\", \"\"]);\n\n// exports\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getSource, getSourceLayout } from 'core/dataBus/selectors';\nimport { selectNode } from 'core/dataBus/actions';\nimport { getCheckedState } from 'core/controlsBus/selectors';\n\nimport ExplorerBar from './component/ExplorerBar';\n\nconst ExplorerBarContainer = ({ explorerBar, ...otherProps }) => {\n  if (!explorerBar) return null;\n\n  return <ExplorerBar {...otherProps} />;\n};\n\nconst mapStateToProps = (state, props) => {\n  const { filesMap, foldersMap } = getSource(state, props);\n  const { sourceLayoutTree } = getSourceLayout(state, props);\n\n  const { explorerBar } = getCheckedState(state);\n\n  return {\n    nodesTree: [sourceLayoutTree],\n    filesMap,\n    foldersMap,\n    explorerBar\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onFolderClick: node => {\n    /*dispatch(toggleFolder(node))*/\n  },\n\n  onFileClick: node => {\n    dispatch(selectNode(node));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExplorerBarContainer);\n","import React from 'react';\nimport { Tree } from 'antd';\n\nimport { FILE_NODE_TYPE } from 'core/constants';\nimport './ExplorerBar.scss';\n\nconst DirectoryTree = Tree.DirectoryTree;\nconst TreeNode = Tree.TreeNode;\n\nconst buildNodes = tree =>\n  (!tree ? [] : tree).filter(n => !!n).map(node => {\n    if (node.data.type === FILE_NODE_TYPE) {\n      return <TreeNode title={node.data.name} key={node.data.path} isLeaf />;\n    }\n\n    return (\n      <TreeNode title={node.data.name} key={node.data.path}>\n        {buildNodes(node.children)}\n      </TreeNode>\n    );\n  });\n\nexport default ({ nodesTree, onFileClick, onFolderClick, filesMap, foldersMap }) => {\n  if (!nodesTree || !nodesTree.length || !nodesTree[0]) {\n    return null;\n  }\n\n  const rootPath = nodesTree[0].data.path;\n  return (\n    <div className=\"ExplorerBar\">\n      <div className=\"body\">\n        <DirectoryTree\n          showIcon\n          defaultExpandedKeys={[rootPath]}\n          onSelect={path => filesMap[path] && onFileClick(filesMap[path])}\n          onExpand={path => foldersMap[path] && onFolderClick(foldersMap[path])}\n        >\n          {buildNodes(nodesTree)}\n        </DirectoryTree>\n      </div>\n    </div>\n  );\n};\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/sass-loader/lib/loader.js!./ExplorerBar.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/sass-loader/lib/loader.js!./ExplorerBar.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/sass-loader/lib/loader.js!./ExplorerBar.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}