{"version":3,"sources":["webpack://codecrumbs/./js/components/sideBar/component/FlowChartTab/index.scss","webpack://codecrumbs/./js/components/sideBar/component/FlowChartTab/index.js","webpack://codecrumbs/./js/components/sideBar/component/FlowChartTab/index.scss?549a"],"names":["Styles","strokeColor","defaultFillColor","textColor","arrowFillColor","rectangleFillColor","rectangleDotFillColor","functionFillColor","rootCircleFillColor","loopFillColor","conditionFillColor","destructedNodeFillColor","classFillColor","debuggerFillColor","exportFillColor","throwFillColor","tryFillColor","objectFillColor","callFillColor","debugModeFillColor","FlowChartTab","props","state","then","createSVGRender","convertCodeToFlowTree","svgRender","applyColorBasedTheme","setState","ready","active","svgXml","flowTree","fileCode","buildShapesTree","print","e","__html","React","Component"],"mappings":";;;;;;;;;AAAA,2BAA2B,mBAAO,CAAC,mHAA8D;AACjG;;;AAGA;AACA,cAAc,QAAS,sBAAsB,kBAAkB,4BAA4B,sBAAsB,EAAE,4BAA4B,uBAAuB,iBAAiB,mBAAmB,EAAE;;AAE5M;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAIA;AAEA,IAAMA,MAAM,GAAG;AACbC,aAAW,EAAE,SADA;AAEbC,kBAAgB,EAAE,SAFL;AAGbC,WAAS,EAAE,SAHE;AAIbC,gBAAc,EAAE,SAJH;AAKbC,oBAAkB,EAAE,MALP;AAMbC,uBAAqB,EAAE,MANV;AAObC,mBAAiB,EAAE,MAPN;AAQbC,qBAAmB,EAAE,MARR;AASbC,eAAa,EAAE,MATF;AAUbC,oBAAkB,EAAE,MAVP;AAWbC,yBAAuB,EAAE,MAXZ;AAYbC,gBAAc,EAAE,MAZH;AAabC,mBAAiB,EAAE,MAbN;AAcbC,iBAAe,EAAE,SAdJ;AAebC,gBAAc,EAAE,MAfH;AAgBbC,cAAY,EAAE,MAhBD;AAiBbC,iBAAe,EAAE,MAjBJ;AAkBbC,eAAa,EAAE,MAlBF;AAmBbC,oBAAkB,EAAE;AAnBP,CAAf;;IAsBMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;wCAEmB;AAAA;;AAClB,yMAA8DC,IAA9D,CACE,gBAAgD;AAAA,YAA7CC,eAA6C,QAA7CA,eAA6C;AAAA,YAA5BC,qBAA4B,QAA5BA,qBAA4B;AAC9C,cAAI,CAACC,SAAL,GAAiBF,eAAe,EAAhC;;AACA,cAAI,CAACE,SAAL,CAAeC,oBAAf,CAAoC3B,MAApC;;AACA,cAAI,CAACyB,qBAAL,GAA6BA,qBAA7B;;AAEA,cAAI,CAACG,QAAL,CAAc;AAAEC,eAAK,EAAE;AAAT,SAAd;AACD,OAPH;AASD;;;4CAEuB;AACtB,aAAO,KAAKR,KAAL,CAAWS,MAAlB;AACD;;;6BAEQ;AAAA,UACCD,KADD,GACW,KAAKP,KADhB,CACCO,KADD;;AAEP,UAAI,CAACA,KAAL,EAAY;AACV,eACE;AAAK,mBAAS,EAAE;AAAhB,WACE,sHADF,CADF;AAKD;;AAED,UAAIE,MAAM,GAAG,EAAb;;AAEA,UAAI;AACF,YAAMC,QAAQ,GAAG,KAAKP,qBAAL,CAA2B,KAAKJ,KAAL,CAAWY,QAAX,IAAuB,EAAlD,CAAjB;AACAF,cAAM,GAAG,KAAKL,SAAL,CAAeQ,eAAf,CAA+BF,QAA/B,EAAyCG,KAAzC,EAAT;AACD,OAHD,CAGE,OAAOC,CAAP,EAAU;AACV,eACE;AACE,iBAAO,EAAE,2DADX;AAEE,cAAI,EAAC,SAFP;AAGE,qBAAW,EAAC,+FAHd;AAIE,kBAAQ;AAJV,UADF;AAQD;;AAED,aACE;AAAK,iBAAS,EAAE;AAAhB,SACE;AAAK,+BAAuB,EAAE;AAAEC,gBAAM,EAAEN;AAAV;AAA9B,QADF,CADF;AAKD;;;;EArDwBO,4CAAK,CAACC,S;;AAwDlBnB,2EAAf,E;;;;;;;;;;;;ACnFA,cAAc,mBAAO,CAAC,6QAAkI;;AAExJ,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,yHAAkE;;AAEvF;;AAEA,GAAG,KAAU,EAAE,E","file":"flow-chart-tab.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".FlowChartLoading {\\n  display: flex;\\n  justify-content: center;\\n  padding-top: 50px; }\\n\\n.FlowChartTabContainer {\\n  position: relative;\\n  height: 100%;\\n  overflow: auto; }\\n\", \"\"]);\n\n// exports\n","import React from 'react';\n\nimport { Spin, Alert } from 'antd';\n\nimport './index.scss';\n\nconst Styles = {\n  strokeColor: '#00bcd4',\n  defaultFillColor: '#e6f7ff',\n  textColor: '#595959',\n  arrowFillColor: '#00bcd4',\n  rectangleFillColor: '#fff',\n  rectangleDotFillColor: '#fff',\n  functionFillColor: '#fff',\n  rootCircleFillColor: '#fff',\n  loopFillColor: '#fff',\n  conditionFillColor: '#fff',\n  destructedNodeFillColor: '#fff',\n  classFillColor: '#fff',\n  debuggerFillColor: '#fff',\n  exportFillColor: '#e6f7ff',\n  throwFillColor: '#fff',\n  tryFillColor: '#fff',\n  objectFillColor: '#fff',\n  callFillColor: '#fff',\n  debugModeFillColor: '#fff'\n};\n\nclass FlowChartTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    import(/* webpackChunkName: \"js2flowchart\" */ 'js2flowchart').then(\n      ({ createSVGRender, convertCodeToFlowTree }) => {\n        this.svgRender = createSVGRender();\n        this.svgRender.applyColorBasedTheme(Styles);\n        this.convertCodeToFlowTree = convertCodeToFlowTree;\n\n        this.setState({ ready: true });\n      }\n    );\n  }\n\n  shouldComponentUpdate() {\n    return this.props.active;\n  }\n\n  render() {\n    const { ready } = this.state;\n    if (!ready) {\n      return (\n        <div className={'FlowChartLoading'}>\n          <Spin />\n        </div>\n      );\n    }\n\n    let svgXml = '';\n\n    try {\n      const flowTree = this.convertCodeToFlowTree(this.props.fileCode || '');\n      svgXml = this.svgRender.buildShapesTree(flowTree).print();\n    } catch (e) {\n      return (\n        <Alert\n          message={'Oppss.. AST parser failed to parse your code. That dude..'}\n          type=\"warning\"\n          description=\"Well, you can file an issue here https://github.com/Bogdan-Lyashenko/js-code-to-svg-flowchart\"\n          showIcon\n        />\n      );\n    }\n\n    return (\n      <div className={'FlowChartTabContainer'}>\n        <div dangerouslySetInnerHTML={{ __html: svgXml }} />\n      </div>\n    );\n  }\n}\n\nexport default FlowChartTab;\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/lib/loader.js!./index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/lib/loader.js!./index.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/lib/loader.js!./index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}